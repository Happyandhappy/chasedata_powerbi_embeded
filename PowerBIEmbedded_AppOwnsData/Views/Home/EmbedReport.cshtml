@model PowerBIEmbedded_AppOwnsData.Models.EmbedConfig

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://npmcdn.com/es6-promise@3.2.1"></script>
<script src="~/scripts/powerbi.js"></script>
<script src="~/scripts/aes.js"></script>
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div id="errorWrapper">
        <h2>
            Error
        </h2>
        <pre>
            @Model.ErrorMessage
        </pre>
    </div>

    return;
}
<div id="reportContainer"></div>



<script>
    //http://localhost:42734/Home/EmbedReport?workspaceid=000867a9-a5a4-4fe5-9cfa-7be3bd59a0c1&reportid=d528b44f-8746-4e35-9531-0d8426722567&filter1=DialingResults/Rep eq 'Brandon'&filter2=AgentActivity/Rep eq 'Brandon'
    // Read embed application token from Model
    var accessToken = "@Model.EmbedToken.Token";
    var expire = Date.now() + 3600000;
    // Read embed URL from Model
    var embedUrl = "@Html.Raw(Model.EmbedUrl)";

    // Read report Id from Model
    var embedReportId = "@Model.Id";

    // Get models. models contains enums that can be used.
    var models = window['powerbi-client'].models;
    var refresh = 1;
    try{
        refresh = parseInt(getValue("@Html.Raw(Model.Refresh)"));
    } catch (error) {
        refresh = 1;
    }

    function getValue(string) {
        var str = string.replace("*", "+");
        var decrypted = CryptoJS.AES.decrypt(str, "Secret Passphrase");
        return decrypted.toString(CryptoJS.enc.Utf8);
    }

    // Embed configuration used to describe the what and how to embed.
    // This object is used when calling powerbi.embed.
    // This also includes settings and options such as filters.
    // You can find more information at https://github.com/Microsoft/PowerBI-JavaScript/wiki/Embed-Configuration-Details.
    // var filter_Uris = @Model.Filters.Length;
    var filter_Uris = [];

    @foreach (var d in @Model.Filters)
    {
        @:filter_Uris.push("@d".replace(/&#39;/g, ''));
    }

    var filters = [];
    for (var i = 0 ; i < filter_Uris.length ; i++) {
        var table = filter_Uris[i].split("/")[0];
        var field = filter_Uris[i].split("/")[1].split(" eq ")[0];
        var value = filter_Uris[i].split("/")[1].split(" eq ")[1];
        var filter = {
            $schema: "http://powerbi.com/product/schema#basic",
            target: {
                table: table,
                column: field
            },
            operator: "In",
            values: [value]
        };
        filters.push(filter);
    }

    var config = {
        type: 'report',
        tokenType: models.TokenType.Embed,
        accessToken: accessToken,
        embedUrl: embedUrl,
        id: embedReportId,
        permissions: models.Permissions.All,
        settings: {
            filterPaneEnabled: false,
            navContentPaneEnabled: true
        },
        filters: filters
    };

    // Get a reference to the embedded ,u HTML element
    var reportContainer = $('#reportContainer')[0];

    if ("@Model.Username" != "") {
        $("#RLS").prop('checked', true);
        $("#RLSdiv").show();
    }
    else
    {
        $("#RLS").prop('checked', false);
        $("#RLSdiv").hide();
    }

    if ("@Model.IsEffectiveIdentityRequired.GetValueOrDefault()" == "True") {
        $("#noRLSdiv").hide();
        $("#RLS").removeAttr("disabled");
        $("#RLS").change(function () {
            if ($(this).is(":checked")) {
                $("#RLSdiv").show(300);
            } else {
                $("#RLSdiv").hide(200);
            }
        });
    }
    else
    {
        $("#noRLSdiv").show();
    }
    // Embed the report and display it within the div container.
    var report = powerbi.embed(reportContainer, config);
    //report = powerbi.get(reportContainer);

    window.setInterval(function () {
        var currentTime = Date.now();
        var safetyInterval = 60 * 1000;

        // time until token refresh in milliseconds
        var timeout = expire - currentTime - safetyInterval;
        if (timeout <= 0) {
            $.ajax({
                url: "/home/getEmbedToken?workspaceid=@Model.WorkSpaceId&reportid=@Model.ReportId",
                method: "GET",
                success: function (res) {
                    console.log(res);
                    embedUrl = res.split("&&")[0].replace("embedUrl=", "");
                    accessToken = res.split("&&")[1].replace("EmbedToken=", "");
                    expire = currentTime + 3600000;
                    var config = {
                        type: 'report',
                        tokenType: models.TokenType.Embed,
                        accessToken: accessToken,
                        embedUrl: embedUrl,
                        id: embedReportId,
                        permissions: models.Permissions.All,
                        settings: {
                            filterPaneEnabled: false,
                            navContentPaneEnabled: true
                        },
                        filters: filters
                    };
                    report = powerbi.embed(reportContainer, config);
                    //report = powerbi.get(reportContainer);
                }
            });
        } else {
            report.refresh();
        }
    }, refresh * 60 * 1000);
</script>